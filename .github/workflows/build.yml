on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [x86_64-pc-windows-msvc, i686-pc-windows-msvc, aarch64-pc-windows-msvc]

    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - uses: dtolnay/rust-toolchain@stable

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: windows-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: windows-cargo-

      - run: npm ci

      - run: |
          rustup target add x86_64-pc-windows-msvc
          rustup target add i686-pc-windows-msvc
          rustup target add aarch64-pc-windows-msvc

      - run: npx napi build --release --target $CARGO_BUILD_TARGET
        env:
          CARGO_BUILD_TARGET: ${{ matrix.platform }}

      - run: mv dist/index.node dist/node-enject-${CARGO_BUILD_TARGET}.node
        env:
          CARGO_BUILD_TARGET: ${{ matrix.platform }}

      - uses: actions/upload-artifact@v4
        with:
          name: napi-windows-${{ matrix.platform }}
          path: |
            dist/*.node

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: napi-windows-x86_64-pc-windows-msvc
          path: dist/x64

      - uses: actions/download-artifact@v4
        with:
          name: napi-windows-i686-pc-windows-msvc
          path: dist/x86

      - uses: actions/download-artifact@v4
        with:
          name: napi-windows-aarch64-pc-windows-msvc
          path: dist/arm64

      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}